{"ast":null,"code":"var _jsxFileName = \"/home/spav/Documents/Kurs/Assigment-4/client2/src/pages/AppLayout.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Switch, Route } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Header from 'components/App/Header';\nimport NotFound from 'components/NotFound';\nimport SideBar from './SideBar';\nimport UserSuggestions from './UserSuggestions';\nimport Home from 'pages/Home';\nimport Profile from 'pages/Profile';\nimport Explore from 'pages/Explore';\nimport People from 'pages/People';\nimport Notifications from 'pages/Notifications';\nimport Post from 'pages/Post';\nimport Messages from 'pages/Messages';\nimport { useWindowSize } from 'hooks/useWindowSize';\nimport { useClickOutside } from 'hooks/useClickOutside';\nimport * as Routes from 'routes';\nimport theme from 'theme';\nimport { useStore } from 'store';\nimport { SET_AUTH_USER } from 'store/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Root = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin: 0 auto;\n  width: 100%;\n  position: relative;\n  @media (min-width: ${p => p.theme.screen.md}) {\n    width: ${p => p.theme.screen.md};\n  }\n  @media (min-width: ${p => parseInt(p.theme.screen.lg, 10) + 20 + 'px'}) {\n    width: ${p => p.theme.screen.lg};\n  }\n`;\n/**\n * Main layout of the app, when user is authenticated\n */\n\n_c = Root;\n\nconst AppLayout = ({\n  location,\n  authUser\n}) => {\n  _s();\n\n  const [{\n    auth\n  }, dispatch] = useStore();\n  const windowSize = useWindowSize();\n  const isDesktop = windowSize.width >= parseInt(theme.screen.md, 10);\n  const [isSideBarOpen, setIsSidebarOpen] = useState(isDesktop);\n  const sideBarRef = useRef('');\n  useEffect(() => {\n    dispatch({\n      type: SET_AUTH_USER,\n      payload: authUser\n    });\n  }, [dispatch, authUser]);\n  useClickOutside(sideBarRef, () => {\n    if (!isDesktop && isSideBarOpen) {\n      setIsSidebarOpen(false);\n    }\n  });\n  useEffect(() => {\n    setIsSidebarOpen(isDesktop);\n  }, [isDesktop]);\n  useEffect(() => {\n    return () => {\n      if (!isDesktop) {\n        setIsSidebarOpen(false);\n      }\n    };\n  }, [location.pathname, isDesktop]);\n  if (!auth.user) return null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      toggleSideBar: () => setIsSidebarOpen(!isSideBarOpen)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Root, {\n      children: [/*#__PURE__*/_jsxDEV(SideBar, {\n        isOpen: isSideBarOpen,\n        sideBarRef: sideBarRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: Routes.HOME,\n          component: Home\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: Routes.EXPLORE,\n          component: Explore\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: Routes.PEOPLE,\n          component: People\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: Routes.NOTIFICATIONS,\n          component: Notifications\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: Routes.MESSAGES,\n          component: Messages\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: Routes.USER_PROFILE,\n          component: Profile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: Routes.POST,\n          component: Post\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          component: NotFound\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UserSuggestions, {\n        pathname: location.pathname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AppLayout, \"A8uwe78n4kj3NgY00MOozXF/Swk=\", false, function () {\n  return [useStore, useWindowSize, useClickOutside];\n});\n\n_c2 = AppLayout;\nAppLayout.propTypes = {\n  location: PropTypes.object.isRequired,\n  authUser: PropTypes.object.isRequired\n};\nexport default _c3 = withRouter(AppLayout);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Root\");\n$RefreshReg$(_c2, \"AppLayout\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["/home/spav/Documents/Kurs/Assigment-4/client2/src/pages/AppLayout.js"],"names":["React","useEffect","useState","useRef","PropTypes","withRouter","Switch","Route","styled","Header","NotFound","SideBar","UserSuggestions","Home","Profile","Explore","People","Notifications","Post","Messages","useWindowSize","useClickOutside","Routes","theme","useStore","SET_AUTH_USER","Root","div","p","screen","md","parseInt","lg","AppLayout","location","authUser","auth","dispatch","windowSize","isDesktop","width","isSideBarOpen","setIsSidebarOpen","sideBarRef","type","payload","pathname","user","HOME","EXPLORE","PEOPLE","NOTIFICATIONS","MESSAGES","USER_PROFILE","POST","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Switch, Route } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport Header from 'components/App/Header';\nimport NotFound from 'components/NotFound';\nimport SideBar from './SideBar';\nimport UserSuggestions from './UserSuggestions';\n\nimport Home from 'pages/Home';\nimport Profile from 'pages/Profile';\nimport Explore from 'pages/Explore';\nimport People from 'pages/People';\nimport Notifications from 'pages/Notifications';\nimport Post from 'pages/Post';\nimport Messages from 'pages/Messages';\n\nimport { useWindowSize } from 'hooks/useWindowSize';\nimport { useClickOutside } from 'hooks/useClickOutside';\n\nimport * as Routes from 'routes';\n\nimport theme from 'theme';\n\nimport { useStore } from 'store';\nimport { SET_AUTH_USER } from 'store/auth';\n\nconst Root = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin: 0 auto;\n  width: 100%;\n  position: relative;\n  @media (min-width: ${(p) => p.theme.screen.md}) {\n    width: ${(p) => p.theme.screen.md};\n  }\n  @media (min-width: ${(p) => parseInt(p.theme.screen.lg, 10) + 20 + 'px'}) {\n    width: ${(p) => p.theme.screen.lg};\n  }\n`;\n\n/**\n * Main layout of the app, when user is authenticated\n */\nconst AppLayout = ({ location, authUser }) => {\n  const [{ auth }, dispatch] = useStore();\n\n  const windowSize = useWindowSize();\n  const isDesktop = windowSize.width >= parseInt(theme.screen.md, 10);\n  const [isSideBarOpen, setIsSidebarOpen] = useState(isDesktop);\n\n  const sideBarRef = useRef('');\n\n  useEffect(() => {\n    dispatch({ type: SET_AUTH_USER, payload: authUser });\n  }, [dispatch, authUser]);\n\n  useClickOutside(sideBarRef, () => {\n    if (!isDesktop && isSideBarOpen) {\n      setIsSidebarOpen(false);\n    }\n  });\n\n  useEffect(() => {\n    setIsSidebarOpen(isDesktop);\n  }, [isDesktop]);\n\n  useEffect(() => {\n    return () => {\n      if (!isDesktop) {\n        setIsSidebarOpen(false);\n      }\n    };\n  }, [location.pathname, isDesktop]);\n\n  if (!auth.user) return null;\n\n  return (\n    <>\n      <Header toggleSideBar={() => setIsSidebarOpen(!isSideBarOpen)} />\n\n      <Root>\n        <SideBar isOpen={isSideBarOpen} sideBarRef={sideBarRef} />\n\n        <Switch>\n          <Route exact path={Routes.HOME} component={Home} />\n\n          <Route exact path={Routes.EXPLORE} component={Explore} />\n\n          <Route exact path={Routes.PEOPLE} component={People} />\n\n          <Route exact path={Routes.NOTIFICATIONS} component={Notifications} />\n\n          <Route exact path={Routes.MESSAGES} component={Messages} />\n\n          <Route exact path={Routes.USER_PROFILE} component={Profile} />\n\n          <Route exact path={Routes.POST} component={Post} />\n\n          <Route component={NotFound} />\n        </Switch>\n\n        <UserSuggestions pathname={location.pathname} />\n      </Root>\n    </>\n  );\n};\n\nAppLayout.propTypes = {\n  location: PropTypes.object.isRequired,\n  authUser: PropTypes.object.isRequired,\n};\n\nexport default withRouter(AppLayout);"]},"metadata":{},"sourceType":"module"}