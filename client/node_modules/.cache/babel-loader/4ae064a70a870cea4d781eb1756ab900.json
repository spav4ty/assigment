{"ast":null,"code":"var _jsxFileName = \"/home/spav/Documents/Kurs/Assigment-4/client2/src/components/Table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Button, ButtonGroup, Table } from 'react-bootstrap';\nimport { useStore } from '../store/store';\nimport { useLazyQuery, useQuery } from '@apollo/client';\nimport { GET_ALL_USERS } from '../utils/graphql';\nimport { Result } from './Result';\nimport useCheckbox from '../hooks/useCheckbox';\nimport { Checkbox } from './Checkbox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction conversionDate(data) {\n  let date = new Date(+data);\n  date = date.toString().split(' ');\n  return `${date[2]} ${date[1]} ${date[3]} ${date[4]}  `;\n}\n\nexport const TableUsers = ({\n  data,\n  refetchAllUsers\n}) => {\n  _s();\n\n  const [{\n    auth\n  }] = useStore();\n  const [users, setUsers] = useState([]);\n  const {\n    checkeds,\n    handleChange,\n    handleChangeAll,\n    handleChangeNo\n  } = useCheckbox(users);\n  useEffect(() => {\n    setUsers(data);\n  }, [data]);\n  console.log(checkeds);\n  return /*#__PURE__*/_jsxDEV(Table, {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n            size: \"sm\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleChangeAll,\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleChangeNo,\n              children: \"No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Last Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: users.map((u, i) => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n              name: u.id,\n              checked: checkeds[u.id],\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: u.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: u.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: u.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: conversionDate(u.createdAt)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: conversionDate(u.createdLastLogin)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: u.isOnline === true ? 'Online' : 'Offline'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 19\n          }, this)]\n        }, u.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}; // export const Result = ({data, checkeds, handleChange}) => {\n//     // console.log(data)\n//     return (\n//         <>\n//         </>\n//     )\n// }\n\n_s(TableUsers, \"rPoJGNI2k9IYLHKtquKucM7CnLI=\", false, function () {\n  return [useStore, useCheckbox];\n});\n\n_c = TableUsers;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableUsers\");","map":{"version":3,"sources":["/home/spav/Documents/Kurs/Assigment-4/client2/src/components/Table.js"],"names":["React","useEffect","useState","Button","ButtonGroup","Table","useStore","useLazyQuery","useQuery","GET_ALL_USERS","Result","useCheckbox","Checkbox","conversionDate","data","date","Date","toString","split","TableUsers","refetchAllUsers","auth","users","setUsers","checkeds","handleChange","handleChangeAll","handleChangeNo","console","log","map","u","i","id","name","email","createdAt","createdLastLogin","isOnline"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nimport { Button, ButtonGroup, Table  } from 'react-bootstrap';\nimport { useStore } from '../store/store';\nimport { useLazyQuery, useQuery } from '@apollo/client';\nimport { GET_ALL_USERS } from '../utils/graphql';\nimport { Result } from './Result';\nimport useCheckbox from '../hooks/useCheckbox';\nimport { Checkbox } from './Checkbox';\n\n\nfunction conversionDate(data) {\n  let date = new Date(+data);\n  date = date.toString().split(' ')\n  return `${date[2]} ${date[1]} ${date[3]} ${date[4]}  `;\n}\n\n\n\n\nexport const TableUsers = ({data, refetchAllUsers}) => {\n    const [{ auth }] = useStore();\n    const [users, setUsers] = useState([])\n\n    const {checkeds, handleChange, handleChangeAll, handleChangeNo} = useCheckbox(users)\n    \n    useEffect(() => {\n        setUsers(data)\n    }, [data])\n  \n\n    console.log(checkeds);\n  \n    return (\n        <Table>\n            <thead>\n              <tr>\n                <th>\n                <ButtonGroup size=\"sm\">\n                  <Button onClick={handleChangeAll}>\n                  All\n                  </Button>\n                  <Button onClick={handleChangeNo}>\n                  No\n                  </Button>\n                </ButtonGroup>\n                \n                </th>\n                <th>Id</th>\n                <th>Name</th>\n                <th>Email</th>\n                <th>Date</th>\n                <th>Last Login</th>\n                <th>Status</th>\n              </tr>\n            </thead>\n            <tbody>\n            {users.map((u, i)=> {\n            return (\n                <tr key={u.id}>\n                  <td>\n                  <Checkbox name={u.id} checked={checkeds[u.id]} onChange={handleChange} />\n                  </td>\n                  <td>{u.id}</td>\n                  <td>{u.name}</td>\n                  <td>{u.email}</td>\n                  <td>{conversionDate(u.createdAt)}</td>\n                  <td>{conversionDate(u.createdLastLogin)}</td>\n                  <td>{u.isOnline === true ? 'Online' : 'Offline'}</td>\n                </tr>\n            )\n            })\n            }\n        </tbody>\n        </Table>\n    )\n}\n\n\n\n// export const Result = ({data, checkeds, handleChange}) => {\n    \n//     // console.log(data)\n\n//     return (\n//         <>\n          \n//         </>\n//     )\n// }\n"]},"metadata":{},"sourceType":"module"}