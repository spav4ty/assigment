{"ast":null,"code":"var _jsxFileName = \"/home/spav/Documents/Kurs/Assigment-4/client2/src/components/Table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Button, ButtonGroup, Table } from 'react-bootstrap';\nimport { useStore } from '../store/store';\nimport { useLazyQuery, useQuery } from '@apollo/client';\nimport { GET_ALL_USERS } from '../utils/graphql';\nimport useCheckbox from '../hooks/useCheckbox';\nimport { Checkbox } from './Checkbox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction conversionDate(data) {\n  let date = new Date(+data);\n  date = date.toString().split(' ');\n  return `${date[2]} ${date[1]} ${date[3]} ${date[4]}`;\n}\n\nexport const TableUsers = ({\n  data,\n  refetchAllUsers\n}) => {\n  _s();\n\n  const [{\n    auth\n  }] = useStore();\n  const [users, setUsers] = useState([]);\n  const {\n    checkeds,\n    handleChange,\n    handleChangeAll,\n    handleChangeNo\n  } = useCheckbox(users);\n\n  const handlerBlock = () => {};\n\n  const handlerUnBlock = () => {};\n\n  const handlerDelete = () => {\n    try {\n      console.log(Object.entries(checkeds));\n      const deleteId = Object.keys(Object.entries(checkeds).filter(([key, value]) => {\n        console.log(key, value);\n        return value !== false;\n      }));\n      console.log('deelte', deleteId);\n    } catch (e) {}\n  };\n\n  useEffect(() => {\n    setUsers(data);\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlerBlock,\n        children: \"Block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlerUnBlock,\n        children: \"UnBlock\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlerDelete,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n              size: \"sm\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleChangeAll,\n                children: \"All\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleChangeNo,\n                children: \"No\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Last Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: users.map((u, i) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                name: u.id,\n                checked: checkeds[u.id],\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: u.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: u.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: u.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: conversionDate(u.createdAt)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: conversionDate(u.lastLoginAt)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: u.isOnline === true ? 'Online' : 'Offline'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this)]\n          }, u.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TableUsers, \"rPoJGNI2k9IYLHKtquKucM7CnLI=\", false, function () {\n  return [useStore, useCheckbox];\n});\n\n_c = TableUsers;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableUsers\");","map":{"version":3,"sources":["/home/spav/Documents/Kurs/Assigment-4/client2/src/components/Table.js"],"names":["React","useEffect","useState","Button","ButtonGroup","Table","useStore","useLazyQuery","useQuery","GET_ALL_USERS","useCheckbox","Checkbox","conversionDate","data","date","Date","toString","split","TableUsers","refetchAllUsers","auth","users","setUsers","checkeds","handleChange","handleChangeAll","handleChangeNo","handlerBlock","handlerUnBlock","handlerDelete","console","log","Object","entries","deleteId","keys","filter","key","value","e","map","u","i","id","name","email","createdAt","lastLoginAt","isOnline"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nimport { Button, ButtonGroup, Table  } from 'react-bootstrap';\nimport { useStore } from '../store/store';\nimport { useLazyQuery, useQuery } from '@apollo/client';\nimport { GET_ALL_USERS } from '../utils/graphql';\nimport useCheckbox from '../hooks/useCheckbox';\nimport { Checkbox } from './Checkbox';\n\nfunction conversionDate(data) {\n  let date = new Date(+data);\n  date = date.toString().split(' ')\n  return `${date[2]} ${date[1]} ${date[3]} ${date[4]}`;\n}\n\nexport const TableUsers = ({data, refetchAllUsers}) => {\n    const [{ auth }] = useStore();\n    const [users, setUsers] = useState([])\n\n    const {checkeds, handleChange, handleChangeAll, handleChangeNo} = useCheckbox(users)\n\n    const handlerBlock = () => {\n\n    } \n\n    const handlerUnBlock = () => {\n\n    }\n\n    const handlerDelete = () => {\n      try {\n        console.log(Object.entries(checkeds));\n        const deleteId = Object.keys(Object.entries(checkeds).filter(([key,value]) => {\n          console.log(key,value);\n          return value !== false\n        }))\n        console.log('deelte',deleteId);\n      }catch(e) {\n\n      }\n    }    \n    \n    useEffect(() => {\n        setUsers(data)\n    }, [data])\n  \n    return (\n      <>\n      <div>\n        <button onClick={handlerBlock}>Block</button>\n        <button onClick={handlerUnBlock}>UnBlock</button>\n        <button onClick={handlerDelete}>Delete</button>\n      </div>\n        <Table>\n            <thead>\n              <tr>\n                <th>\n                <ButtonGroup size=\"sm\">\n                  <Button onClick={handleChangeAll}>\n                  All\n                  </Button>\n                  <Button onClick={handleChangeNo}>\n                  No\n                  </Button>\n                </ButtonGroup>\n                \n                </th>\n                <th>Id</th>\n                <th>Name</th>\n                <th>Email</th>\n                <th>Date</th>\n                <th>Last Login</th>\n                <th>Status</th>\n              </tr>\n            </thead>\n            <tbody>\n            {users.map((u, i)=> {\n            return (\n                <tr key={u.id}>\n                  <td>\n                  <Checkbox name={u.id} checked={checkeds[u.id]} onChange={handleChange} />\n                  </td>\n                  <td>{u.id}</td>\n                  <td>{u.name}</td>\n                  <td>{u.email}</td>\n                  <td>{conversionDate(u.createdAt)}</td>\n                  <td>{conversionDate(u.lastLoginAt)}</td>\n                  <td>{u.isOnline === true ? 'Online' : 'Offline'}</td>\n                </tr>\n            )\n            })\n            }\n        </tbody>\n        </Table>\n        </>\n    )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}