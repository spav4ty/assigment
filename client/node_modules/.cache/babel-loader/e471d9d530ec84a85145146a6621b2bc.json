{"ast":null,"code":"var _jsxFileName = \"/home/spav/Documents/Kurs/Assigment-4/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery } from '@apollo/client';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { GET_AUTH_USER } from './utils/graphql';\nimport AuthLayout from './pages/AuthLayout';\nimport AppLayout from './pages/AppLayout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const {\n    loading,\n    data,\n    error,\n    refetch\n  } = useQuery(GET_AUTH_USER);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 24\n  }, this);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: data.getAuthUser ? /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        render: () => /*#__PURE__*/_jsxDEV(AppLayout, {\n          authUser: data.getAuthUser,\n          refetch: refetch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        render: () => /*#__PURE__*/_jsxDEV(AuthLayout, {\n          refetch: refetch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"ejfEvhJqyvg+/lw4iwy2rcewm3A=\", false, function () {\n  return [useQuery];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/spav/Documents/Kurs/Assigment-4/client/src/App.js"],"names":["React","useQuery","BrowserRouter","Router","Route","Switch","GET_AUTH_USER","AuthLayout","AppLayout","App","loading","data","error","refetch","getAuthUser"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AAEA,SAASC,aAAT,QAA8B,iBAA9B;AAEA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,SAAP,MAAuB,mBAAvB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA,KAAjB;AAAwBC,IAAAA;AAAxB,MAAoCZ,QAAQ,CAACK,aAAD,CAAlD;AAEA,MAAII,OAAJ,EAAa,oBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;;AACb,MAAIE,KAAJ,EAAW;AACT,wBAAO;AAAA,gBAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE,QAAC,MAAD;AAAA,2BACI,QAAC,MAAD;AAAA,gBACGD,IAAI,CAACG,WAAL,gBACC,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,MAAM,EAAE,mBAAM,QAAC,SAAD;AAAW,UAAA,QAAQ,EAAEH,IAAI,CAACG,WAA1B;AAAuC,UAAA,OAAO,EAAED;AAAhD;AAAA;AAAA;AAAA;AAAA;AAA3B;AAAA;AAAA;AAAA;AAAA,cADD,gBAGC,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,MAAM,EAAE,mBAAM,QAAC,UAAD;AAAY,UAAA,OAAO,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA;AAA3B;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CApBD;;GAAMJ,G;UAEsCR,Q;;;KAFtCQ,G;AAsBN,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/client';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport { GET_AUTH_USER } from './utils/graphql';\n\nimport AuthLayout from './pages/AuthLayout';\nimport AppLayout  from './pages/AppLayout';\n\nconst App = () => {\n\n  const { loading, data, error, refetch } = useQuery(GET_AUTH_USER);\n\n  if (loading) return (<div>Loading...</div>);\n  if (error) {\n    return <div>{error}</div>;\n  }\n\n  return (\n    <Router>\n        <Switch>\n          {data.getAuthUser ? (\n            <Route exact render={() => <AppLayout authUser={data.getAuthUser} refetch={refetch} />} />\n          ) : (\n            <Route exact render={() => <AuthLayout refetch={refetch} />} />\n          )}\n        </Switch>\n    </Router>\n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}