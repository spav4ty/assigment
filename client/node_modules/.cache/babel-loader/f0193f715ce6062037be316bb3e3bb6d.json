{"ast":null,"code":"var _jsxFileName = \"/home/spav/Documents/Kurs/Assigment-4/client2/src/components/Table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Button, ButtonGroup, Row, Table } from 'react-bootstrap';\nimport { useStore } from '../store/store';\nimport { useMutation } from '@apollo/client';\nimport { DELETE_USERS } from '../utils/graphql';\nimport useCheckbox from '../hooks/useCheckbox';\nimport { Checkbox } from './Checkbox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction conversionDate(data) {\n  let date = new Date(+data);\n  date = date.toString().split(' ');\n  return `${date[2]} ${date[1]} ${date[3]} ${date[4]}`;\n}\n\nexport const TableUsers = ({\n  data,\n  refetchUser,\n  refetchAllUsers\n}) => {\n  _s();\n\n  const [{\n    auth\n  }] = useStore();\n  const [users, setUsers] = useState([]);\n  const {\n    checkeds,\n    handleChange,\n    handleChangeAll,\n    handleChangeNo\n  } = useCheckbox(users);\n  const [deleteUsers, {\n    loading,\n    error\n  }] = useMutation(DELETE_USERS);\n\n  const handlerBlock = () => {};\n\n  const handlerUnBlock = () => {};\n\n  const handlerDelete = async () => {\n    try {\n      const deleteId = Object.keys(Object.fromEntries(Object.entries(checkeds).filter(([key, value]) => {\n        console.log(key, value);\n        return value !== false;\n      })));\n      console.log('deelte', deleteId);\n      await deleteUsers({\n        variables: {\n          usersIds: deleteId\n        }\n      });\n      await refetchUser();\n      await refetchAllUsers();\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handlerRefetch = async () => {\n    try {\n      await refetchAllUsers();\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  useEffect(async () => {\n    setUsers(data);\n    await refetchAllUsers();\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handlerBlock,\n          children: \"Block\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handlerUnBlock,\n          children: \"UnBlock\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: handlerDelete,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\",\n          onClick: handlerRefetch,\n          children: \"UpdateUsers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n              size: \"sm\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleChangeAll,\n                children: \"All\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleChangeNo,\n                children: \"No\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Last Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: users.map((u, i) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                name: u.id,\n                checked: checkeds[u.id],\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: u.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: u.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: u.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: conversionDate(u.createdAt)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: conversionDate(u.lastLoginAt)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: u.isOnline === true ? 'Online' : 'Offline'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 19\n            }, this)]\n          }, u.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TableUsers, \"fH21Jvmyr9REWiWtXCL7oZpib4w=\", false, function () {\n  return [useStore, useCheckbox, useMutation];\n});\n\n_c = TableUsers;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableUsers\");","map":{"version":3,"sources":["/home/spav/Documents/Kurs/Assigment-4/client2/src/components/Table.js"],"names":["React","useEffect","useState","Button","ButtonGroup","Row","Table","useStore","useMutation","DELETE_USERS","useCheckbox","Checkbox","conversionDate","data","date","Date","toString","split","TableUsers","refetchUser","refetchAllUsers","auth","users","setUsers","checkeds","handleChange","handleChangeAll","handleChangeNo","deleteUsers","loading","error","handlerBlock","handlerUnBlock","handlerDelete","deleteId","Object","keys","fromEntries","entries","filter","key","value","console","log","variables","usersIds","e","handlerRefetch","map","u","i","id","name","email","createdAt","lastLoginAt","isOnline"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,GAA9B,EAAmCC,KAAnC,QAAiD,iBAAjD;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,SAASC,QAAT,QAAyB,YAAzB;;;;AAEA,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AAC5B,MAAIC,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACF,IAAV,CAAX;AACAC,EAAAA,IAAI,GAAGA,IAAI,CAACE,QAAL,GAAgBC,KAAhB,CAAsB,GAAtB,CAAP;AACA,SAAQ,GAAEH,IAAI,CAAC,CAAD,CAAI,IAAGA,IAAI,CAAC,CAAD,CAAI,IAAGA,IAAI,CAAC,CAAD,CAAI,IAAGA,IAAI,CAAC,CAAD,CAAI,EAAnD;AACD;;AAED,OAAO,MAAMI,UAAU,GAAG,CAAC;AAACL,EAAAA,IAAD;AAAOM,EAAAA,WAAP;AAAmBC,EAAAA;AAAnB,CAAD,KAAyC;AAAA;;AAC/D,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,IAAad,QAAQ,EAA3B;AACA,QAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM;AAACsB,IAAAA,QAAD;AAAWC,IAAAA,YAAX;AAAyBC,IAAAA,eAAzB;AAA0CC,IAAAA;AAA1C,MAA4DjB,WAAW,CAACY,KAAD,CAA7E;AAEA,QAAK,CAACM,WAAD,EAAa;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAb,IAAkCtB,WAAW,CAACC,YAAD,CAAlD;;AAEA,QAAMsB,YAAY,GAAG,MAAM,CAE1B,CAFD;;AAIA,QAAMC,cAAc,GAAG,MAAM,CAE5B,CAFD;;AAIA,QAAMC,aAAa,GAAG,YAAY;AAChC,QAAI;AACF,YAAMC,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYD,MAAM,CAACE,WAAP,CAAmBF,MAAM,CAACG,OAAP,CAAed,QAAf,EAAyBe,MAAzB,CAAgC,CAAC,CAACC,GAAD,EAAKC,KAAL,CAAD,KAAiB;AAC/FC,QAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ,EAAgBC,KAAhB;AACA,eAAOA,KAAK,KAAK,KAAjB;AACD,OAH+C,CAAnB,CAAZ,CAAjB;AAIAC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBT,QAArB;AAEA,YAAMN,WAAW,CAAC;AAChBgB,QAAAA,SAAS,EAAG;AACVC,UAAAA,QAAQ,EAACX;AADC;AADI,OAAD,CAAjB;AAKA,YAAMf,WAAW,EAAjB;AACA,YAAMC,eAAe,EAArB;AACD,KAdD,CAcC,OAAM0B,CAAN,EAAS;AACRJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,CAAZ;AACD;AACF,GAlBD;;AAoBA,QAAMC,cAAc,GAAG,YAAY;AACjC,QAAG;AACD,YAAM3B,eAAe,EAArB;AACD,KAFD,CAEC,OAAM0B,CAAN,EAAQ;AACPJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,CAAZ;AACD;AACF,GAND;;AAOA7C,EAAAA,SAAS,CAAC,YAAW;AACjBsB,IAAAA,QAAQ,CAACV,IAAD,CAAR;AACA,UAAMO,eAAe,EAArB;AACH,GAHQ,EAGN,CAACP,IAAD,CAHM,CAAT;AAMA,sBACE;AAAA,4BACA,QAAC,GAAD;AAAA,6BAGA,QAAC,WAAD;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEkB,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,QAAhB;AAAyB,UAAA,OAAO,EAAEC,aAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,SAAhB;AAA0B,UAAA,OAAO,EAAEc,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA,YADA,eAWE,QAAC,KAAD;AAAA,8BACI;AAAA,+BACE;AAAA,kCACE;AAAA,mCACA,QAAC,WAAD;AAAa,cAAA,IAAI,EAAC,IAAlB;AAAA,sCACE,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAErB,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAEC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBADF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdF,eAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfF,eAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhBF,eAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADJ,eAsBI;AAAA,kBACCL,KAAK,CAAC0B,GAAN,CAAU,CAACC,CAAD,EAAIC,CAAJ,KAAS;AACpB,8BACI;AAAA,oCACE;AAAA,qCACA,QAAC,QAAD;AAAU,gBAAA,IAAI,EAAED,CAAC,CAACE,EAAlB;AAAsB,gBAAA,OAAO,EAAE3B,QAAQ,CAACyB,CAAC,CAACE,EAAH,CAAvC;AAA+C,gBAAA,QAAQ,EAAE1B;AAAzD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAA,wBAAKwB,CAAC,CAACE;AAAP;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE;AAAA,wBAAKF,CAAC,CAACG;AAAP;AAAA;AAAA;AAAA;AAAA,oBALF,eAME;AAAA,wBAAKH,CAAC,CAACI;AAAP;AAAA;AAAA;AAAA;AAAA,oBANF,eAOE;AAAA,wBAAKzC,cAAc,CAACqC,CAAC,CAACK,SAAH;AAAnB;AAAA;AAAA;AAAA;AAAA,oBAPF,eAQE;AAAA,wBAAK1C,cAAc,CAACqC,CAAC,CAACM,WAAH;AAAnB;AAAA;AAAA;AAAA;AAAA,oBARF,eASE;AAAA,wBAAKN,CAAC,CAACO,QAAF,KAAe,IAAf,GAAsB,QAAtB,GAAiC;AAAtC;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA,aAASP,CAAC,CAACE,EAAX;AAAA;AAAA;AAAA;AAAA,kBADJ;AAaC,SAdA;AADD;AAAA;AAAA;AAAA;AAAA,cAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA,kBADF;AAuDH,CAxGM;;GAAMjC,U;UACUX,Q,EAG+CG,W,EAE3BF,W;;;KAN9BU,U","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nimport { Button, ButtonGroup, Row, Table  } from 'react-bootstrap';\nimport { useStore } from '../store/store';\nimport { useMutation } from '@apollo/client';\nimport { DELETE_USERS } from '../utils/graphql';\nimport useCheckbox from '../hooks/useCheckbox';\nimport { Checkbox } from './Checkbox';\n\nfunction conversionDate(data) {\n  let date = new Date(+data);\n  date = date.toString().split(' ')\n  return `${date[2]} ${date[1]} ${date[3]} ${date[4]}`;\n}\n\nexport const TableUsers = ({data, refetchUser,refetchAllUsers}) => {\n    const [{ auth }] = useStore();\n    const [users, setUsers] = useState([])\n\n    const {checkeds, handleChange, handleChangeAll, handleChangeNo} = useCheckbox(users)\n\n    const[deleteUsers,{ loading, error}] = useMutation(DELETE_USERS)\n\n    const handlerBlock = () => {\n\n    } \n\n    const handlerUnBlock = () => {\n\n    }\n\n    const handlerDelete = async () => {\n      try {\n        const deleteId = Object.keys(Object.fromEntries(Object.entries(checkeds).filter(([key,value]) => {\n          console.log(key,value);\n          return value !== false\n        })));\n        console.log('deelte',deleteId);\n\n        await deleteUsers({\n          variables:  {\n            usersIds:deleteId,\n        },    \n        })\n        await refetchUser()\n        await refetchAllUsers()\n      }catch(e) {\n        console.log(e);\n      }\n    }    \n    \n    const handlerRefetch = async () => {\n      try{\n        await refetchAllUsers()\n      }catch(e){\n        console.log(e);\n      }\n    }\n    useEffect(async() => {\n        setUsers(data)\n        await refetchAllUsers()\n    }, [data])\n  \n\n    return (\n      <>\n      <Row>\n\n      \n      <ButtonGroup>\n        <Button onClick={handlerBlock}>Block</Button>\n        <Button onClick={handlerUnBlock}>UnBlock</Button>\n        <Button variant=\"danger\" onClick={handlerDelete}>Delete</Button>\n        <Button variant=\"success\" onClick={handlerRefetch}>UpdateUsers</Button>\n      </ButtonGroup>\n      </Row>\n        <Table>\n            <thead>\n              <tr>\n                <th>\n                <ButtonGroup size=\"sm\">\n                  <Button onClick={handleChangeAll}>\n                  All\n                  </Button>\n                  <Button onClick={handleChangeNo}>\n                  No\n                  </Button>\n                </ButtonGroup>\n                \n                </th>\n                <th>Id</th>\n                <th>Name</th>\n                <th>Email</th>\n                <th>Date</th>\n                <th>Last Login</th>\n                <th>Status</th>\n              </tr>\n            </thead>\n            <tbody>\n            {users.map((u, i)=> {\n            return (\n                <tr key={u.id}>\n                  <td>\n                  <Checkbox name={u.id} checked={checkeds[u.id]} onChange={handleChange} />\n                  </td>\n                  <td>{u.id}</td>\n                  <td>{u.name}</td>\n                  <td>{u.email}</td>\n                  <td>{conversionDate(u.createdAt)}</td>\n                  <td>{conversionDate(u.lastLoginAt)}</td>\n                  <td>{u.isOnline === true ? 'Online' : 'Offline'}</td>\n                </tr>\n            )\n            })\n            }\n        </tbody>\n        </Table>\n        </>\n    )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}