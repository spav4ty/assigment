{"ast":null,"code":"var _jsxFileName = \"/home/spav/Documents/Kurs/Assigment-4/client2/src/pages/AppLayout.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Switch, Route } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Header from 'components/App/Header';\nimport NotFound from 'components/NotFound';\nimport SideBar from './SideBar';\nimport UserSuggestions from './UserSuggestions';\nimport Home from 'pages/Home';\nimport { useStore } from '../store/store';\nimport { SET_AUTH_USER } from '../store/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Root = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin: 0 auto;\n  width: 100%;\n  position: relative;\n  @media (min-width: ${p => p.theme.screen.md}) {\n    width: ${p => p.theme.screen.md};\n  }\n  @media (min-width: ${p => parseInt(p.theme.screen.lg, 10) + 20 + 'px'}) {\n    width: ${p => p.theme.screen.lg};\n  }\n`;\n/**\n * Main layout of the app, when user is authenticated\n */\n\nconst AppLayout = ({\n  location,\n  authUser\n}) => {\n  _s();\n\n  const [{\n    auth\n  }, dispatch] = useStore();\n  const windowSize = useWindowSize();\n  const isDesktop = windowSize.width >= parseInt(theme.screen.md, 10);\n  const [isSideBarOpen, setIsSidebarOpen] = useState(isDesktop);\n  const sideBarRef = useRef('');\n  useEffect(() => {\n    dispatch({\n      type: SET_AUTH_USER,\n      payload: authUser\n    });\n  }, [dispatch, authUser]);\n  useClickOutside(sideBarRef, () => {\n    if (!isDesktop && isSideBarOpen) {\n      setIsSidebarOpen(false);\n    }\n  });\n  useEffect(() => {\n    setIsSidebarOpen(isDesktop);\n  }, [isDesktop]);\n  useEffect(() => {\n    return () => {\n      if (!isDesktop) {\n        setIsSidebarOpen(false);\n      }\n    };\n  }, [location.pathname, isDesktop]);\n  if (!auth.user) return null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: Routes.HOME,\n        component: Home\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AppLayout, \"A8uwe78n4kj3NgY00MOozXF/Swk=\", true, function () {\n  return [useStore];\n});\n\n_c = AppLayout;\nAppLayout.propTypes = {\n  location: PropTypes.object.isRequired,\n  authUser: PropTypes.object.isRequired\n};\nexport default _c2 = withRouter(AppLayout);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AppLayout\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/spav/Documents/Kurs/Assigment-4/client2/src/pages/AppLayout.js"],"names":["React","useEffect","useState","useRef","PropTypes","withRouter","Switch","Route","styled","Header","NotFound","SideBar","UserSuggestions","Home","useStore","SET_AUTH_USER","Root","div","p","theme","screen","md","parseInt","lg","AppLayout","location","authUser","auth","dispatch","windowSize","useWindowSize","isDesktop","width","isSideBarOpen","setIsSidebarOpen","sideBarRef","type","payload","useClickOutside","pathname","user","Routes","HOME","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Switch, Route } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport Header from 'components/App/Header';\nimport NotFound from 'components/NotFound';\nimport SideBar from './SideBar';\nimport UserSuggestions from './UserSuggestions';\n\nimport Home from 'pages/Home';\nimport { useStore } from '../store/store';\nimport { SET_AUTH_USER } from '../store/auth';\n\nconst Root = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin: 0 auto;\n  width: 100%;\n  position: relative;\n  @media (min-width: ${(p) => p.theme.screen.md}) {\n    width: ${(p) => p.theme.screen.md};\n  }\n  @media (min-width: ${(p) => parseInt(p.theme.screen.lg, 10) + 20 + 'px'}) {\n    width: ${(p) => p.theme.screen.lg};\n  }\n`;\n\n/**\n * Main layout of the app, when user is authenticated\n */\nconst AppLayout = ({ location, authUser }) => {\n  const [{ auth }, dispatch] = useStore();\n\n  const windowSize = useWindowSize();\n  const isDesktop = windowSize.width >= parseInt(theme.screen.md, 10);\n  const [isSideBarOpen, setIsSidebarOpen] = useState(isDesktop);\n\n  const sideBarRef = useRef('');\n\n  useEffect(() => {\n    dispatch({ type: SET_AUTH_USER, payload: authUser });\n  }, [dispatch, authUser]);\n\n  useClickOutside(sideBarRef, () => {\n    if (!isDesktop && isSideBarOpen) {\n      setIsSidebarOpen(false);\n    }\n  });\n\n  useEffect(() => {\n    setIsSidebarOpen(isDesktop);\n  }, [isDesktop]);\n\n  useEffect(() => {\n    return () => {\n      if (!isDesktop) {\n        setIsSidebarOpen(false);\n      }\n    };\n  }, [location.pathname, isDesktop]);\n\n  if (!auth.user) return null;\n\n  return (\n    <>\n      <Header/>\n\n        <Switch>\n          <Route exact path={Routes.HOME} component={Home} />\n        </Switch>\n\n    </>\n  );\n};\n\nAppLayout.propTypes = {\n  location: PropTypes.object.isRequired,\n  authUser: PropTypes.object.isRequired,\n};\n\nexport default withRouter(AppLayout);"]},"metadata":{},"sourceType":"module"}