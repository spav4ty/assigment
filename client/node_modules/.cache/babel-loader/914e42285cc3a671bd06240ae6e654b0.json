{"ast":null,"code":"import _regeneratorRuntime from\"/home/spav/Documents/Kurs/Assigment-4/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/spav/Documents/Kurs/Assigment-4/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/spav/Documents/Kurs/Assigment-4/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{withRouter}from'react-router-dom';import{useMutation}from'@apollo/client';import{Button,Form,Row}from'react-bootstrap';import{GET_ALL_USERS,SIGN_UP}from'../../utils/graphql';import useForm from'../../hooks/useForm';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var SignUp=function SignUp(_ref){var history=_ref.history,refetch=_ref.refetch;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),error=_useState2[0],setError=_useState2[1];var _useForm=useForm({email:'',name:'',password:''}),inputs=_useForm.inputs,handleChange=_useForm.handleChange;var _useMutation=useMutation(SIGN_UP),_useMutation2=_slicedToArray(_useMutation,2),signup=_useMutation2[0],loading=_useMutation2[1].loading;var handleSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();_context.prev=1;_context.next=4;return signup({variables:{userInput:inputs},refetchQueries:[{query:GET_ALL_USERS}]});case 4:response=_context.sent;localStorage.setItem('token',response.data.signup.token);_context.next=8;return refetch();case 8:history.push('/');_context.next=14;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](1);setError(_context.t0.graphQLErrors[0].message);case 14:case\"end\":return _context.stop();}}},_callee,null,[[1,11]]);}));return function handleSubmit(_x){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Form,{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"E-Mail\"}),/*#__PURE__*/_jsx(Form.Control,{name:\"email\",type:\"text\",value:inputs.email,placeholder:\"email\",onChange:handleChange})]}),/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Name\"}),/*#__PURE__*/_jsx(Form.Control,{name:\"name\",type:\"text\",value:inputs.name,placeholder:\"name\",onChange:handleChange})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"formBasicPassword\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Password\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"password\",name:\"password\",value:inputs.password,placeholder:\"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",onChange:handleChange})]}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",type:\"submit\",children:\"Sign Up\"})]})});};export default withRouter(SignUp);","map":{"version":3,"sources":["/home/spav/Documents/Kurs/Assigment-4/client/src/pages/Auth/SignUp.js"],"names":["React","useState","withRouter","useMutation","Button","Form","Row","GET_ALL_USERS","SIGN_UP","useForm","SignUp","history","refetch","error","setError","email","name","password","inputs","handleChange","signup","loading","handleSubmit","e","preventDefault","variables","userInput","refetchQueries","query","response","localStorage","setItem","data","token","push","graphQLErrors","message"],"mappings":"seAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,OAASC,WAAT,KAA4B,gBAA5B,CACA,OAASC,MAAT,CAAkBC,IAAlB,CAAwBC,GAAxB,KAAmC,iBAAnC,CAGA,OAASC,aAAT,CAAwBC,OAAxB,KAAuC,qBAAvC,CACA,MAAOC,CAAAA,OAAP,KAAoB,qBAApB,C,6IAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAA0B,IAAvBC,CAAAA,OAAuB,MAAvBA,OAAuB,CAAdC,OAAc,MAAdA,OAAc,CACrC,cAA0BX,QAAQ,CAAC,EAAD,CAAlC,wCAAOY,KAAP,eAAcC,QAAd,eACA,aAA+BL,OAAO,CAAC,CACrCM,KAAK,CAAE,EAD8B,CAErCC,IAAI,CAAE,EAF+B,CAGrCC,QAAQ,CAAE,EAH2B,CAAD,CAAtC,CAAOC,MAAP,UAAOA,MAAP,CAAeC,YAAf,UAAeA,YAAf,CAMF,iBAA8BhB,WAAW,CAACK,OAAD,CAAzC,8CAAOY,MAAP,kBAAiBC,OAAjB,kBAAiBA,OAAjB,CAEA,GAAMC,CAAAA,YAAY,2FAAG,iBAAOC,CAAP,+HACnBA,CAAC,CAACC,cAAF,GADmB,sCAIMJ,CAAAA,MAAM,CAAC,CAC5BK,SAAS,CAAG,CACVC,SAAS,CAAER,MADD,CADgB,CAI9BS,cAAc,CAAE,CAAC,CAACC,KAAK,CAAErB,aAAR,CAAD,CAJc,CAAD,CAJZ,QAIXsB,QAJW,eAUjBC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8BF,QAAQ,CAACG,IAAT,CAAcZ,MAAd,CAAqBa,KAAnD,EAViB,sBAWXrB,CAAAA,OAAO,EAXI,QAYjBD,OAAO,CAACuB,IAAR,CAAa,GAAb,EAZiB,iFAcjBpB,QAAQ,CAAC,YAAMqB,aAAN,CAAoB,CAApB,EAAuBC,OAAxB,CAAR,CAdiB,qEAAH,kBAAZd,CAAAA,YAAY,6CAAlB,CAmBA,mBACE,sCACQ,MAAC,IAAD,EAAM,QAAQ,CAAEA,YAAhB,wBACE,MAAC,IAAD,CAAM,KAAN,yBACA,KAAC,IAAD,CAAM,KAAN,qBADA,cAEE,KAAC,IAAD,CAAM,OAAN,EAAc,IAAI,CAAC,OAAnB,CAA2B,IAAI,CAAC,MAAhC,CAAuC,KAAK,CAAEJ,MAAM,CAACH,KAArD,CAA4D,WAAW,CAAC,OAAxE,CAAgF,QAAQ,CAAEI,YAA1F,EAFF,GADF,cAKE,MAAC,IAAD,CAAM,KAAN,yBACA,KAAC,IAAD,CAAM,KAAN,mBADA,cAEE,KAAC,IAAD,CAAM,OAAN,EAAc,IAAI,CAAC,MAAnB,CAA0B,IAAI,CAAC,MAA/B,CAAsC,KAAK,CAAED,MAAM,CAACF,IAApD,CAA0D,WAAW,CAAC,MAAtE,CAA6E,QAAQ,CAAEG,YAAvF,EAFF,GALF,cASE,MAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,mBAAtB,wBACE,KAAC,IAAD,CAAM,KAAN,uBADF,cAEE,KAAC,IAAD,CAAM,OAAN,EAAc,IAAI,CAAC,UAAnB,CAA8B,IAAI,CAAC,UAAnC,CAA8C,KAAK,CAAED,MAAM,CAACD,QAA5D,CAAsE,WAAW,CAAC,sCAAlF,CAA2F,QAAQ,CAAEE,YAArG,EAFF,GATF,cAaE,KAAC,MAAD,EAAQ,OAAO,CAAC,SAAhB,CAA0B,IAAI,CAAC,QAA/B,qBAbF,GADR,EADF,CAsBD,CAnDD,CA0DA,cAAejB,CAAAA,UAAU,CAACQ,MAAD,CAAzB","sourcesContent":["import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { Button,  Form, Row } from 'react-bootstrap'\nimport PropTypes from 'prop-types';\n\nimport { GET_ALL_USERS, SIGN_UP } from '../../utils/graphql';\nimport useForm from '../../hooks/useForm';\n\nconst SignUp = ({ history, refetch }) => {\n    const [error, setError] = useState('');\n    const {inputs, handleChange} = useForm({\n      email: '',\n      name: '',\n      password: ''\n    })\n\n  const [signup, { loading }] = useMutation(SIGN_UP);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const response = await signup({\n        variables:  {\n          userInput: inputs,\n      },    \n      refetchQueries: [{query: GET_ALL_USERS}]\n      });\n      localStorage.setItem('token', response.data.signup.token);\n      await refetch();\n      history.push('/');\n    } catch (error) {\n      setError(error.graphQLErrors[0].message);\n    }\n  };\n\n\n  return (\n    <>\n            <Form onSubmit={handleSubmit}>\n              <Form.Group>\n              <Form.Label>E-Mail</Form.Label>\n                <Form.Control name=\"email\" type=\"text\" value={inputs.email} placeholder=\"email\" onChange={handleChange} />\n              </Form.Group>\n              <Form.Group>\n              <Form.Label>Name</Form.Label>\n                <Form.Control name=\"name\" type=\"text\" value={inputs.name} placeholder=\"name\" onChange={handleChange} />\n              </Form.Group>\n              <Form.Group controlId=\"formBasicPassword\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control type=\"password\" name=\"password\" value={inputs.password} placeholder=\"Пароль\" onChange={handleChange}/>\n              </Form.Group>\n              <Button variant=\"primary\" type=\"submit\">\n                Sign Up\n              </Button>\n            </Form>\n        \n    </>\n  );\n};\n\nSignUp.propTypes = {\n  history: PropTypes.object.isRequired,\n  refetch: PropTypes.func.isRequired,\n};\n\nexport default withRouter(SignUp);"]},"metadata":{},"sourceType":"module"}