{"ast":null,"code":"var _jsxFileName = \"/home/spav/Documents/Kurs/Assigment-4/client2/src/components/Table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Button, ButtonGroup, Table } from 'react-bootstrap';\nimport { useStore } from '../store/store';\nimport { useLazyQuery, useQuery } from '@apollo/client';\nimport { GET_ALL_USERS } from '../utils/graphql';\nimport { Result } from './Result';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction conversionDate(data) {\n  let date = new Date(+data);\n  date = date.toString().split(' ');\n  return `${date[2]} ${date[1]} ${date[3]} ${date[4]}  `;\n}\n\nexport const TableUsers = ({\n  users\n}) => {\n  _s();\n\n  const [{\n    auth\n  }] = useStore();\n  const {\n    checkeds,\n    handleChange,\n    handleChangeAll,\n    handleChangeNo\n  } = useCheckbox(users);\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(GET_ALL_USERS); // console.log(data);\n\n  const allUsers = data === null || data === void 0 ? void 0 : data.allUsers;\n  return /*#__PURE__*/_jsxDEV(Table, {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n            size: \"sm\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleChangeAll,\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleChangeNo,\n              children: \"No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Last Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: /*#__PURE__*/_jsxDEV(Result, {\n        data: allUsers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TableUsers, \"IgBwjBDNTvZ5sh0HusK3deiziv8=\", true, function () {\n  return [useStore, useQuery];\n});\n\n_c = TableUsers;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableUsers\");","map":{"version":3,"sources":["/home/spav/Documents/Kurs/Assigment-4/client2/src/components/Table.js"],"names":["React","useEffect","useState","Button","ButtonGroup","Table","useStore","useLazyQuery","useQuery","GET_ALL_USERS","Result","conversionDate","data","date","Date","toString","split","TableUsers","users","auth","checkeds","handleChange","handleChangeAll","handleChangeNo","useCheckbox","loading","error","allUsers"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,KAA9B,QAA4C,iBAA5C;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,YAAT,EAAuBC,QAAvB,QAAuC,gBAAvC;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,MAAT,QAAuB,UAAvB;;;AAEA,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AAC5B,MAAIC,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACF,IAAV,CAAX;AACAC,EAAAA,IAAI,GAAGA,IAAI,CAACE,QAAL,GAAgBC,KAAhB,CAAsB,GAAtB,CAAP;AACA,SAAQ,GAAEH,IAAI,CAAC,CAAD,CAAI,IAAGA,IAAI,CAAC,CAAD,CAAI,IAAGA,IAAI,CAAC,CAAD,CAAI,IAAGA,IAAI,CAAC,CAAD,CAAI,IAAnD;AACD;;AAED,OAAO,MAAMI,UAAU,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAAA;;AACnC,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,IAAab,QAAQ,EAA3B;AAEA,QAAM;AAACc,IAAAA,QAAD;AAAWC,IAAAA,YAAX;AAAyBC,IAAAA,eAAzB;AAA0CC,IAAAA;AAA1C,MAA4DC,WAAW,CAACN,KAAD,CAA7E;AAEF,QAAM;AAACN,IAAAA,IAAD;AAAOa,IAAAA,OAAP;AAAgBC,IAAAA;AAAhB,MAAwBlB,QAAQ,CAACC,aAAD,CAAtC,CALqC,CAMrC;;AAEA,QAAMkB,QAAQ,GAAGf,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEe,QAAvB;AAGE,sBACI,QAAC,KAAD;AAAA,4BACI;AAAA,6BACE;AAAA,gCACE;AAAA,iCACA,QAAC,WAAD;AAAa,YAAA,IAAI,EAAC,IAAlB;AAAA,oCACE,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAEL,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAEC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBADF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF,eAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF,eAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBF,eAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADJ,eAsBI;AAAA,6BACJ,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAEI;AAAd;AAAA;AAAA;AAAA;AAAA;AADI;AAAA;AAAA;AAAA;AAAA,YAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA4BH,CAvCM;;GAAMV,U;UACUX,Q,EAISE,Q;;;KALnBS,U","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nimport { Button, ButtonGroup, Table  } from 'react-bootstrap';\nimport { useStore } from '../store/store';\nimport { useLazyQuery, useQuery } from '@apollo/client';\nimport { GET_ALL_USERS } from '../utils/graphql';\nimport { Result } from './Result';\n\nfunction conversionDate(data) {\n  let date = new Date(+data);\n  date = date.toString().split(' ')\n  return `${date[2]} ${date[1]} ${date[3]} ${date[4]}  `;\n}\n\nexport const TableUsers = ({users}) => {\n    const [{ auth }] = useStore();\n    \n    const {checkeds, handleChange, handleChangeAll, handleChangeNo} = useCheckbox(users)\n  \n  const {data, loading, error}= useQuery(GET_ALL_USERS)\n  // console.log(data);\n  \n  const allUsers = data?.allUsers\n\n\n    return (\n        <Table>\n            <thead>\n              <tr>\n                <th>\n                <ButtonGroup size=\"sm\">\n                  <Button onClick={handleChangeAll}>\n                  All\n                  </Button>\n                  <Button onClick={handleChangeNo}>\n                  No\n                  </Button>\n                </ButtonGroup>\n                \n                </th>\n                <th>Id</th>\n                <th>Name</th>\n                <th>Email</th>\n                <th>Date</th>\n                <th>Last Login</th>\n                <th>Status</th>\n              </tr>\n            </thead>\n            <tbody>\n        <Result data={allUsers}/>\n        </tbody>\n        </Table>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}