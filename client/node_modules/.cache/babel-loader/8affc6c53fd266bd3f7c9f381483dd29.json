{"ast":null,"code":"var _jsxFileName = \"/home/spav/Documents/Kurs/Assigment-4/client2/src/pages/Auth/SignIn.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { SIGN_IN } from '../../utils/graphql';\nimport useForm from '../../hooks/useForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignIn = ({\n  history,\n  location,\n  refetch\n}) => {\n  _s();\n\n  const {\n    inputs,\n    handleChange\n  } = useForm({\n    email: '',\n    password: ''\n  });\n  const [error, setError] = useState('');\n  const [signin, {\n    loading\n  }] = useMutation(SIGN_IN);\n  console.log(history, location, refetch);\n  useEffect(() => {\n    setError('');\n  }, [location.pathname]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const response = await signin({\n        variables: {\n          input: {\n            email,\n            password\n          }\n        }\n      });\n      localStorage.setItem('token', response.data.signin.token);\n      await refetch();\n      history.push('/');\n    } catch (error) {\n      setError(error.graphQLErrors[0].message);\n    }\n  };\n\n  const {\n    email,\n    password\n  } = inputs;\n  return /*#__PURE__*/_jsxDEV(Row, {\n    className: \"justify-content-center align-items-center vh-100\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          name: \"email\",\n          type: \"text\",\n          value: email,\n          placeholder: \"email\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBasicPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          name: \"password\",\n          value: password,\n          placeholder: \"password\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignIn, \"NXWr8e5N5wdXhQB878+kEiEc7NE=\", false, function () {\n  return [useForm, useMutation];\n});\n\n_c = SignIn;\nSignIn.propTypes = {\n  history: PropTypes.object.isRequired,\n  refetch: PropTypes.func.isRequired\n};\nexport default _c2 = withRouter(SignIn);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SignIn\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/spav/Documents/Kurs/Assigment-4/client2/src/pages/Auth/SignIn.js"],"names":["React","useState","useEffect","PropTypes","withRouter","useMutation","SIGN_IN","useForm","SignIn","history","location","refetch","inputs","handleChange","email","password","error","setError","signin","loading","console","log","pathname","handleSubmit","e","preventDefault","response","variables","input","localStorage","setItem","data","token","push","graphQLErrors","message","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { SIGN_IN } from '../../utils/graphql';\nimport useForm from '../../hooks/useForm';\n\n\nconst SignIn = ({ history, location, refetch }) => {\n  const {inputs, handleChange} = useForm({\n    email: '',\n    password: ''\n  });\n  const [error, setError] = useState('');\n  const [signin, { loading }] = useMutation(SIGN_IN);\n\n  console.log(history, location, refetch);\n\n  useEffect(() => {\n    setError('');\n  }, [location.pathname]);\n\n \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const response = await signin({\n        variables: { input: { email, password } },\n      });\n      localStorage.setItem('token', response.data.signin.token);\n      await refetch();\n      history.push('/');\n    } catch (error) {\n      setError(error.graphQLErrors[0].message);\n    }\n  };\n\n  const { email, password } = inputs;\n\n  return (\n    <Row className=\"justify-content-center align-items-center vh-100\">\n    <Form onSubmit={handleSubmit}>\n      <Form.Group>\n      <Form.Label>E-Mail</Form.Label>\n        <Form.Control name=\"email\" type=\"text\" value={email} placeholder=\"email\" onChange={handleChange} />\n      </Form.Group>\n\n      <Form.Group controlId=\"formBasicPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control type=\"password\" name=\"password\" value={password} placeholder=\"password\" onChange={handleChange}/>\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\">\n        Sign In\n      </Button>\n    </Form>\n</Row>\n  );\n};\n\nSignIn.propTypes = {\n  history: PropTypes.object.isRequired,\n  refetch: PropTypes.func.isRequired,\n};\n\nexport default withRouter(SignIn);"]},"metadata":{},"sourceType":"module"}