{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nexport default function useForm(initial = {}) {\n  _s();\n\n  const [inputs, setInputs] = useState(initial);\n  const initialValue = Object.values(initial).join('');\n  useEffect(() => {\n    setInputs(initial);\n  }, [initialValue]);\n\n  function handleChange(e) {\n    let {\n      value,\n      name,\n      type\n    } = e.target;\n\n    if (type === 'number') {\n      value = parseInt(value);\n    }\n\n    if (type === 'file') {\n      [value] = e.target.files;\n    }\n\n    setInputs({ ...inputs,\n      [name]: value\n    });\n  }\n\n  return {\n    inputs,\n    handleChange\n  };\n}\n\n_s(useForm, \"Ojj4hh6HHOsjtwWnkUaVb5V0o3U=\");","map":{"version":3,"sources":["/home/spav/Documents/Kurs/Assigment-4/client2/src/hooks/useForm.js"],"names":["useEffect","useState","useForm","initial","inputs","setInputs","initialValue","Object","values","join","handleChange","e","value","name","type","target","parseInt","files"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,eAAe,SAASC,OAAT,CAAiBC,OAAO,GAAG,EAA3B,EAA+B;AAAA;;AAC5C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAACE,OAAD,CAApC;AACA,QAAMG,YAAY,GAAGC,MAAM,CAACC,MAAP,CAAcL,OAAd,EAAuBM,IAAvB,CAA4B,EAA5B,CAArB;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,SAAS,CAACF,OAAD,CAAT;AACD,GAFQ,EAEN,CAACG,YAAD,CAFM,CAAT;;AAIA,WAASI,YAAT,CAAsBC,CAAtB,EAAyB;AACvB,QAAI;AAACC,MAAAA,KAAD;AAAQC,MAAAA,IAAR;AAAcC,MAAAA;AAAd,QAAsBH,CAAC,CAACI,MAA5B;;AACA,QAAGD,IAAI,KAAK,QAAZ,EAAsB;AACpBF,MAAAA,KAAK,GAAGI,QAAQ,CAACJ,KAAD,CAAhB;AACD;;AACD,QAAGE,IAAI,KAAK,MAAZ,EAAoB;AAClB,OAACF,KAAD,IAAUD,CAAC,CAACI,MAAF,CAASE,KAAnB;AACD;;AACDZ,IAAAA,SAAS,CAAC,EACR,GAAGD,MADK;AAER,OAACS,IAAD,GAAQD;AAFA,KAAD,CAAT;AAID;;AAGD,SAAO;AACLR,IAAAA,MADK;AAELM,IAAAA;AAFK,GAAP;AAID;;GA3BuBR,O","sourcesContent":["import { useEffect, useState } from \"react\";\n\nexport default function useForm(initial = {}) {\n  const [inputs, setInputs] = useState(initial);\n  const initialValue = Object.values(initial).join('');\n  \n  useEffect(() => {\n    setInputs(initial)\n  }, [initialValue])\n\n  function handleChange(e) {\n    let {value, name, type} = e.target\n    if(type === 'number') {\n      value = parseInt(value)\n    }\n    if(type === 'file') {\n      [value] = e.target.files\n    }\n    setInputs({ \n      ...inputs,\n      [name]: value\n    })\n  }\n  \n  \n  return {\n    inputs,\n    handleChange,\n  }\n}"]},"metadata":{},"sourceType":"module"}