{"ast":null,"code":"var _jsxFileName = \"/home/spav/Documents/Kurs/Assigment-4/client2/src/pages/Auth/SignIn.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { SIGN_IN } from '../../utils/graphql';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignIn = ({\n  history,\n  location,\n  refetch\n}) => {\n  _s();\n\n  const [values, setValues] = useState({\n    emailOrUsername: '',\n    password: ''\n  });\n  const [error, setError] = useState('');\n  const [signin, {\n    loading\n  }] = useMutation(SIGN_IN);\n  useEffect(() => {\n    setError('');\n  }, [location.pathname]);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const response = await signin({\n        variables: {\n          input: {\n            email,\n            password\n          }\n        }\n      });\n      localStorage.setItem('token', response.data.signin.token);\n      await refetch();\n      history.push('/');\n    } catch (error) {\n      setError(error.graphQLErrors[0].message);\n    }\n  };\n\n  const {\n    email,\n    password\n  } = values;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignIn, \"Bd0CWa8PQWC/xjf0zPIbIBaGrUs=\", false, function () {\n  return [useMutation];\n});\n\n_c = SignIn;\nSignIn.propTypes = {\n  history: PropTypes.object.isRequired,\n  refetch: PropTypes.func.isRequired\n};\nexport default _c2 = withRouter(SignIn);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SignIn\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/spav/Documents/Kurs/Assigment-4/client2/src/pages/Auth/SignIn.js"],"names":["React","useState","useEffect","PropTypes","withRouter","useMutation","SIGN_IN","SignIn","history","location","refetch","values","setValues","emailOrUsername","password","error","setError","signin","loading","pathname","handleChange","e","name","value","target","handleSubmit","preventDefault","response","variables","input","email","localStorage","setItem","data","token","push","graphQLErrors","message","propTypes","object","isRequired","func"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,QAA4B,gBAA5B;AAEA,SAASC,OAAT,QAAwB,qBAAxB;;;AAGA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,QAAX;AAAqBC,EAAAA;AAArB,CAAD,KAAoC;AAAA;;AACjD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC;AAAEY,IAAAA,eAAe,EAAE,EAAnB;AAAuBC,IAAAA,QAAQ,EAAE;AAAjC,GAAD,CAApC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACgB,MAAD,EAAS;AAAEC,IAAAA;AAAF,GAAT,IAAwBb,WAAW,CAACC,OAAD,CAAzC;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAFQ,EAEN,CAACP,QAAQ,CAACU,QAAV,CAFM,CAAT;;AAIA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAZ,IAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAa,OAACW,IAAD,GAAQC;AAArB,KAAD,CAAT;AACD,GAHD;;AAKA,QAAME,YAAY,GAAG,MAAOJ,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACK,cAAF;;AAEA,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMV,MAAM,CAAC;AAC5BW,QAAAA,SAAS,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,KAAF;AAAShB,YAAAA;AAAT;AAAT;AADiB,OAAD,CAA7B;AAGAiB,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BL,QAAQ,CAACM,IAAT,CAAchB,MAAd,CAAqBiB,KAAnD;AACA,YAAMxB,OAAO,EAAb;AACAF,MAAAA,OAAO,CAAC2B,IAAR,CAAa,GAAb;AACD,KAPD,CAOE,OAAOpB,KAAP,EAAc;AACdC,MAAAA,QAAQ,CAACD,KAAK,CAACqB,aAAN,CAAoB,CAApB,EAAuBC,OAAxB,CAAR;AACD;AACF,GAbD;;AAeA,QAAM;AAAEP,IAAAA,KAAF;AAAShB,IAAAA;AAAT,MAAsBH,MAA5B;AAEA,sBACE;AAAM,IAAA,QAAQ,EAAEc,YAAhB;AAAA,eACGV,KAAK,iBAAK;AAAA,gBAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,YADb,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CArCD;;GAAMR,M;UAG0BF,W;;;KAH1BE,M;AAuCNA,MAAM,CAAC+B,SAAP,GAAmB;AACjB9B,EAAAA,OAAO,EAAEL,SAAS,CAACoC,MAAV,CAAiBC,UADT;AAEjB9B,EAAAA,OAAO,EAAEP,SAAS,CAACsC,IAAV,CAAeD;AAFP,CAAnB;AAKA,qBAAepC,UAAU,CAACG,MAAD,CAAzB","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { SIGN_IN } from '../../utils/graphql';\n\n\nconst SignIn = ({ history, location, refetch }) => {\n  const [values, setValues] = useState({ emailOrUsername: '', password: '' });\n  const [error, setError] = useState('');\n  const [signin, { loading }] = useMutation(SIGN_IN);\n\n  useEffect(() => {\n    setError('');\n  }, [location.pathname]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setValues({ ...values, [name]: value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const response = await signin({\n        variables: { input: { email, password } },\n      });\n      localStorage.setItem('token', response.data.signin.token);\n      await refetch();\n      history.push('/');\n    } catch (error) {\n      setError(error.graphQLErrors[0].message);\n    }\n  };\n\n  const { email, password } = values;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      {error && (<div>{error}</div>)}\n      <button >Sign In</button>\n    </form>\n  );\n};\n\nSignIn.propTypes = {\n  history: PropTypes.object.isRequired,\n  refetch: PropTypes.func.isRequired,\n};\n\nexport default withRouter(SignIn);"]},"metadata":{},"sourceType":"module"}