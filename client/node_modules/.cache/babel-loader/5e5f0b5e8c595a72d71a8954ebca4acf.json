{"ast":null,"code":"var _jsxFileName = \"/home/spav/Documents/Kurs/Assigment-4/client2/src/pages/Auth/SignIn.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter, Redirect, Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client'; // import { } from 'react-router-dom';\n\nimport { GET_ALL_USERS, SIGN_IN } from '../../utils/graphql';\nimport useForm from '../../hooks/useForm';\nimport { Button, Form, Row } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignIn = ({\n  history,\n  location,\n  refetch\n}) => {\n  _s();\n\n  const {\n    inputs,\n    handleChange\n  } = useForm({\n    email: '',\n    password: ''\n  });\n  const [error, setError] = useState('');\n  const [signin, {\n    loading\n  }] = useMutation(SIGN_IN); // console.log(history, location, refetch);\n\n  useEffect(() => {\n    setError('');\n  }, [location.pathname]);\n\n  const handleSubmitSignIn = async e => {\n    e.preventDefault();\n\n    try {\n      console.log(email, password);\n      const response = await signin({\n        variables: {\n          email,\n          password\n        },\n        refetchQueries: [{\n          query: GET_ALL_USERS\n        }]\n      });\n      console.log(response);\n      localStorage.setItem('token', response.data.signin.token);\n      await refetch();\n      history.push('/');\n    } catch (error) {\n      setError(error.graphQLErrors[0].message);\n    }\n  };\n\n  const {\n    email,\n    password\n  } = inputs;\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmitSignIn,\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"E-Mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        name: \"email\",\n        type: \"text\",\n        value: email,\n        placeholder: \"email\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formBasicPassword\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"password\",\n        name: \"password\",\n        value: password,\n        placeholder: \"password\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 7\n  }, this);\n};\n\n_s(SignIn, \"NXWr8e5N5wdXhQB878+kEiEc7NE=\", false, function () {\n  return [useForm, useMutation];\n});\n\n_c = SignIn;\nSignIn.propTypes = {\n  history: PropTypes.object.isRequired,\n  refetch: PropTypes.func.isRequired\n};\nexport default _c2 = withRouter(SignIn);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SignIn\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/spav/Documents/Kurs/Assigment-4/client2/src/pages/Auth/SignIn.js"],"names":["React","useState","useEffect","PropTypes","withRouter","Redirect","Link","useMutation","GET_ALL_USERS","SIGN_IN","useForm","Button","Form","Row","SignIn","history","location","refetch","inputs","handleChange","email","password","error","setError","signin","loading","pathname","handleSubmitSignIn","e","preventDefault","console","log","response","variables","refetchQueries","query","localStorage","setItem","data","token","push","graphQLErrors","message","propTypes","object","isRequired","func"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,EAAqBC,QAArB,EAA+BC,IAA/B,QAA2C,kBAA3C;AACA,SAASC,WAAT,QAA4B,gBAA5B,C,CACA;;AAEA,SAASC,aAAT,EAAwBC,OAAxB,QAAuC,qBAAvC;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,GAAvB,QAAkC,iBAAlC;;;AAGA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,QAAX;AAAqBC,EAAAA;AAArB,CAAD,KAAoC;AAAA;;AACjD,QAAM;AAACC,IAAAA,MAAD;AAASC,IAAAA;AAAT,MAAyBT,OAAO,CAAC;AACrCU,IAAAA,KAAK,EAAE,EAD8B;AAErCC,IAAAA,QAAQ,EAAE;AAF2B,GAAD,CAAtC;AAIA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBtB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACuB,MAAD,EAAS;AAAEC,IAAAA;AAAF,GAAT,IAAwBlB,WAAW,CAACE,OAAD,CAAzC,CANiD,CAQjD;;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAFQ,EAEN,CAACP,QAAQ,CAACU,QAAV,CAFM,CAAT;;AAKA,QAAMC,kBAAkB,GAAG,MAAOC,CAAP,IAAa;AACtCA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAI;AACFC,MAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ,EAAmBC,QAAnB;AACA,YAAMW,QAAQ,GAAG,MAAMR,MAAM,CAAC;AAC5BS,QAAAA,SAAS,EAAE;AAAGb,UAAAA,KAAH;AAAUC,UAAAA;AAAV,SADiB;AAE5Ba,QAAAA,cAAc,EAAE,CAAC;AAACC,UAAAA,KAAK,EAAE3B;AAAR,SAAD;AAFY,OAAD,CAA7B;AAIAsB,MAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AACAI,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BL,QAAQ,CAACM,IAAT,CAAcd,MAAd,CAAqBe,KAAnD;AACA,YAAMtB,OAAO,EAAb;AACAF,MAAAA,OAAO,CAACyB,IAAR,CAAa,GAAb;AACD,KAVD,CAUE,OAAOlB,KAAP,EAAc;AACdC,MAAAA,QAAQ,CAACD,KAAK,CAACmB,aAAN,CAAoB,CAApB,EAAuBC,OAAxB,CAAR;AACD;AACF,GAhBD;;AAkBA,QAAM;AAAEtB,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBH,MAA5B;AAEA,sBAEI,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAES,kBAAhB;AAAA,4BACE,QAAC,IAAD,CAAM,KAAN;AAAA,8BACA,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,QAAA,IAAI,EAAC,OAAnB;AAA2B,QAAA,IAAI,EAAC,MAAhC;AAAuC,QAAA,KAAK,EAAEP,KAA9C;AAAqD,QAAA,WAAW,EAAC,OAAjE;AAAyE,QAAA,QAAQ,EAAED;AAAnF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,mBAAtB;AAAA,8BACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,QAAA,IAAI,EAAC,UAAnB;AAA8B,QAAA,IAAI,EAAC,UAAnC;AAA8C,QAAA,KAAK,EAAEE,QAArD;AAA+D,QAAA,WAAW,EAAC,UAA3E;AAAsF,QAAA,QAAQ,EAAEF;AAAhG;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAUE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAkBD,CArDD;;GAAML,M;UAC2BJ,O,EAKDH,W;;;KAN1BO,M;AAuDNA,MAAM,CAAC6B,SAAP,GAAmB;AACjB5B,EAAAA,OAAO,EAAEZ,SAAS,CAACyC,MAAV,CAAiBC,UADT;AAEjB5B,EAAAA,OAAO,EAAEd,SAAS,CAAC2C,IAAV,CAAeD;AAFP,CAAnB;AAKA,qBAAezC,UAAU,CAACU,MAAD,CAAzB","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter, Redirect, Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n// import { } from 'react-router-dom';\n\nimport { GET_ALL_USERS, SIGN_IN } from '../../utils/graphql';\nimport useForm from '../../hooks/useForm';\nimport { Button, Form, Row } from 'react-bootstrap';\n\n\nconst SignIn = ({ history, location, refetch }) => {\n  const {inputs, handleChange} = useForm({\n    email: '',\n    password: ''\n  });\n  const [error, setError] = useState('');\n  const [signin, { loading }] = useMutation(SIGN_IN);\n\n  // console.log(history, location, refetch);\n\n  useEffect(() => {\n    setError('');\n  }, [location.pathname]);\n\n\n  const handleSubmitSignIn = async (e) => {\n    e.preventDefault();\n\n    try {\n      console.log(email, password);\n      const response = await signin({\n        variables: {  email, password  },\n        refetchQueries: [{query: GET_ALL_USERS}]\n      });\n      console.log(response);\n      localStorage.setItem('token', response.data.signin.token);\n      await refetch();\n      history.push('/');\n    } catch (error) {\n      setError(error.graphQLErrors[0].message);\n    }\n  };\n\n  const { email, password } = inputs;\n\n  return (\n    \n      <Form onSubmit={handleSubmitSignIn}>\n        <Form.Group>\n        <Form.Label>E-Mail</Form.Label>\n          <Form.Control name=\"email\" type=\"text\" value={email} placeholder=\"email\" onChange={handleChange} />\n        </Form.Group>\n    \n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control type=\"password\" name=\"password\" value={password} placeholder=\"password\" onChange={handleChange}/>\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">\n          Sign In\n        </Button>\n      </Form>\n   \n  );\n};\n\nSignIn.propTypes = {\n  history: PropTypes.object.isRequired,\n  refetch: PropTypes.func.isRequired,\n};\n\nexport default withRouter(SignIn);"]},"metadata":{},"sourceType":"module"}