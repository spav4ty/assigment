{"ast":null,"code":"var _jsxFileName = \"/home/spav/Documents/Kurs/Assigment-4/client2/src/components/Table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport useCheckbox from '../hooks/useCheckbox';\nimport { Checkbox } from './Checkbox';\nimport { Button, ButtonGroup, Table } from 'react-bootstrap';\nimport { useStore } from '../store/store';\nimport { useLazyQuery, useQuery } from '@apollo/client';\nimport { GET_ALL_USERS } from '../utils/graphql';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction conversionDate(data) {\n  let date = new Date(+data);\n  date = date.toString().split(' ');\n  return `${date[2]} ${date[1]} ${date[3]} ${date[4]}  `;\n}\n\nexport const TableUsers = ({\n  users\n}) => {\n  _s();\n\n  const [{\n    auth\n  }] = useStore();\n  const {\n    checkeds,\n    handleChange,\n    handleChangeAll,\n    handleChangeNo\n  } = useCheckbox(users);\n  const [allUser, {\n    data,\n    loading,\n    error\n  }] = useLazyQuery(GET_ALL_USERS); // console.log(data);\n\n  const renderContent = () => {\n    // const {allUsers} = data;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: data => {\n        return data.map((u, i) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                name: u.id,\n                checked: checkeds[u.id],\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: u.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: u.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: u.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: conversionDate(u.createAt)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: conversionDate(u.dateLastLogin)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: u.active === true ? 'Active' : 'Not Active'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 19\n            }, this)]\n          }, u.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this);\n        });\n      }\n    }, void 0, false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Table, {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n            size: \"sm\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleChangeAll,\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleChangeNo,\n              children: \"No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Last Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: renderContent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TableUsers, \"1Qw1XYN4DHpIE8R7/grWm+zRE+s=\", false, function () {\n  return [useStore, useCheckbox, useLazyQuery];\n});\n\n_c = TableUsers;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableUsers\");","map":{"version":3,"sources":["/home/spav/Documents/Kurs/Assigment-4/client2/src/components/Table.js"],"names":["React","useEffect","useState","useCheckbox","Checkbox","Button","ButtonGroup","Table","useStore","useLazyQuery","useQuery","GET_ALL_USERS","conversionDate","data","date","Date","toString","split","TableUsers","users","auth","checkeds","handleChange","handleChangeAll","handleChangeNo","allUser","loading","error","renderContent","map","u","i","id","name","email","createAt","dateLastLogin","active"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport useCheckbox from '../hooks/useCheckbox';\nimport { Checkbox } from './Checkbox';\nimport { Button, ButtonGroup, Table  } from 'react-bootstrap';\nimport { useStore } from '../store/store';\nimport { useLazyQuery, useQuery } from '@apollo/client';\nimport { GET_ALL_USERS } from '../utils/graphql';\n\nfunction conversionDate(data) {\n  let date = new Date(+data);\n  date = date.toString().split(' ')\n  return `${date[2]} ${date[1]} ${date[3]} ${date[4]}  `;\n}\n\nexport const TableUsers = ({users}) => {\n    const [{ auth }] = useStore();\n    \n    const {checkeds, handleChange, handleChangeAll, handleChangeNo} = useCheckbox(users)\n  \n  const [allUser,{data, loading, error}] = useLazyQuery(GET_ALL_USERS)\n  // console.log(data);\n\n\n\n  const renderContent = () => {\n    // const {allUsers} = data;\n    \n    \n    return( \n      <>\n        {(data) => {\n          return data.map((u, i)=> {\n            return (\n                <tr key={u.id}>\n                  <td>\n                  <Checkbox name={u.id} checked={checkeds[u.id]} onChange={handleChange} />\n                  </td>\n                  <td>{u.id}</td>\n                  <td>{u.name}</td>\n                  <td>{u.email}</td>\n                  <td>{conversionDate(u.createAt)}</td>\n                  <td>{conversionDate(u.dateLastLogin)}</td>\n                  <td>{u.active === true ? 'Active' : 'Not Active'}</td>\n                </tr>\n            )\n        })}\n    }\n  </>\n  )\n\n\n  };\n  \n  \n    return (\n        <Table>\n            <thead>\n              <tr>\n                <th>\n                <ButtonGroup size=\"sm\">\n                  <Button onClick={handleChangeAll}>\n                  All\n                  </Button>\n                  <Button onClick={handleChangeNo}>\n                  No\n                  </Button>\n                </ButtonGroup>\n                \n                </th>\n                <th>Id</th>\n                <th>Name</th>\n                <th>Email</th>\n                <th>Date</th>\n                <th>Last Login</th>\n                <th>Status</th>\n              </tr>\n            </thead>\n            <tbody>\n        {\n        renderContent()\n        }\n        </tbody>\n        </Table>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}