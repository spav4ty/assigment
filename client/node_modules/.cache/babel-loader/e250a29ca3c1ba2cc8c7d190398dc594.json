{"ast":null,"code":"var _jsxFileName = \"/home/spav/Documents/Kurs/Assigment-4/client2/src/pages/AppLayout.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport { useStore } from '../store/store';\nimport { SET_AUTH_USER } from '../store/auth';\nimport { TableUsers } from '../components/Table';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { GET_ALL_USERS } from '../utils/graphql';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AppLayout = ({\n  location,\n  authUser,\n  refetch: refetchUser\n}) => {\n  _s();\n\n  const [{\n    auth\n  }, dispatch] = useStore();\n  useEffect(() => {\n    dispatch({\n      type: SET_AUTH_USER,\n      payload: authUser\n    });\n  }, [dispatch, authUser]);\n  const {\n    data,\n    loading,\n    error,\n    refetch: refetchAllUsers\n  } = useQuery(GET_ALL_USERS);\n  const users = data ? data === null || data === void 0 ? void 0 : data.allUsers : [];\n  const [logout, {\n    loading: loadingLogout\n  }] = useMutation();\n\n  const handlerLogOut = async () => {\n    window.localStorage.removeItem('token');\n    await refetchUser();\n  };\n\n  if (!auth.user) return null;\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlerLogOut,\n      children: \"Log Out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this), data && /*#__PURE__*/_jsxDEV(TableUsers, {\n      data: users,\n      refetchUser: refetchUser,\n      refetchAllUsers: refetchAllUsers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AppLayout, \"V7lt3tE3TCazakot78K3ndotD1A=\", false, function () {\n  return [useStore, useQuery, useMutation];\n});\n\n_c = AppLayout;\nAppLayout.propTypes = {\n  location: PropTypes.object.isRequired,\n  authUser: PropTypes.object.isRequired\n};\nexport default _c2 = withRouter(AppLayout);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AppLayout\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/spav/Documents/Kurs/Assigment-4/client2/src/pages/AppLayout.js"],"names":["React","useEffect","PropTypes","Link","withRouter","useStore","SET_AUTH_USER","TableUsers","useMutation","useQuery","GET_ALL_USERS","AppLayout","location","authUser","refetch","refetchUser","auth","dispatch","type","payload","data","loading","error","refetchAllUsers","users","allUsers","logout","loadingLogout","handlerLogOut","window","localStorage","removeItem","user","propTypes","object","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,aAAT,QAA8B,eAA9B;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,gBAAtC;AACA,SAASC,aAAT,QAA8B,kBAA9B;;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,QAAZ;AAAsBC,EAAAA,OAAO,EAACC;AAA9B,CAAD,KAAiD;AAAA;;AACjE,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAWC,QAAX,IAAuBZ,QAAQ,EAArC;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEZ,aAAR;AAAuBa,MAAAA,OAAO,EAAEN;AAAhC,KAAD,CAAR;AACD,GAFQ,EAEN,CAACI,QAAD,EAAWJ,QAAX,CAFM,CAAT;AAIA,QAAM;AAACO,IAAAA,IAAD;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA,KAAhB;AAAuBR,IAAAA,OAAO,EAAES;AAAhC,MAAmDd,QAAQ,CAACC,aAAD,CAAjE;AAEA,QAAMc,KAAK,GAAGJ,IAAI,GAAGA,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEK,QAAT,GAAoB,EAAtC;AAEA,QAAM,CAACC,MAAD,EAAS;AAACL,IAAAA,OAAO,EAAEM;AAAV,GAAT,IAAqCnB,WAAW,EAAtD;;AAEA,QAAMoB,aAAa,GAAG,YAAY;AAChCC,IAAAA,MAAM,CAACC,YAAP,CAAoBC,UAApB,CAA+B,OAA/B;AACA,UAAMhB,WAAW,EAAjB;AACD,GAHD;;AAKA,MAAI,CAACC,IAAI,CAACgB,IAAV,EAAgB,OAAO,IAAP;AAChB,MAAGX,OAAH,EAAY,oBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAEZ,sBACE;AAAA,4BACA;AAAQ,MAAA,OAAO,EAAEO,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,EAECR,IAAI,iBAAI,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEI,KAAlB;AAAyB,MAAA,WAAW,EAAET,WAAtC;AAAmD,MAAA,eAAe,EAAEQ;AAApE;AAAA;AAAA;AAAA;AAAA,YAFT;AAAA,kBADF;AAMD,CA3BD;;GAAMZ,S;UACyBN,Q,EAM4BI,Q,EAIdD,W;;;KAXvCG,S;AA6BNA,SAAS,CAACsB,SAAV,GAAsB;AACpBrB,EAAAA,QAAQ,EAAEV,SAAS,CAACgC,MAAV,CAAiBC,UADP;AAEpBtB,EAAAA,QAAQ,EAAEX,SAAS,CAACgC,MAAV,CAAiBC;AAFP,CAAtB;AAKA,qBAAe/B,UAAU,CAACO,SAAD,CAAzB","sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport { useStore } from '../store/store';\nimport { SET_AUTH_USER } from '../store/auth';\nimport { TableUsers } from '../components/Table';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { GET_ALL_USERS } from '../utils/graphql';\n\nconst AppLayout = ({ location, authUser, refetch:refetchUser }) => {\n  const [{ auth }, dispatch] = useStore();\n\n  useEffect(() => {\n    dispatch({ type: SET_AUTH_USER, payload: authUser });\n  }, [dispatch, authUser]);\n\n  const {data, loading, error, refetch: refetchAllUsers} = useQuery(GET_ALL_USERS)\n\n  const users = data ? data?.allUsers : [];\n\n  const [logout, {loading: loadingLogout}] = useMutation()\n\n  const handlerLogOut = async () => {\n    window.localStorage.removeItem('token');\n    await refetchUser()\n  }\n  \n  if (!auth.user) return null;\n  if(loading) return (<div>Loading...</div>)\n\n  return (\n    <>\n    <button onClick={handlerLogOut}>Log Out</button>\n    {data && <TableUsers data={users} refetchUser={refetchUser} refetchAllUsers={refetchAllUsers}/>}\n    </>\n  );\n};\n\nAppLayout.propTypes = {\n  location: PropTypes.object.isRequired,\n  authUser: PropTypes.object.isRequired,\n};\n\nexport default withRouter(AppLayout);"]},"metadata":{},"sourceType":"module"}