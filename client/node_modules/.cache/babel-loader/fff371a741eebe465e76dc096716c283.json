{"ast":null,"code":"var _jsxFileName = \"/home/spav/Documents/Kurs/Assigment-4/client2/src/pages/Auth/SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { Button, Form, Row } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { GET_ALL_USERS, SIGN_UP } from '../../utils/graphql';\nimport useForm from '../../hooks/useForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SignUp = ({\n  history,\n  refetch\n}) => {\n  _s();\n\n  const [error, setError] = useState('');\n  const {\n    inputs,\n    handleChange\n  } = useForm({\n    email: '',\n    name: '',\n    password: ''\n  });\n  const [signup, {\n    loading\n  }] = useMutation(SIGN_UP);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const response = await signup({\n        variables: {\n          userInput: inputs\n        },\n        refetchQueries: GET_ALL_USERS\n      });\n      localStorage.setItem('token', response.data.signup.token);\n      await refetch();\n      history.push('/');\n    } catch (error) {\n      setError(error.graphQLErrors[0].message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          name: \"email\",\n          type: \"text\",\n          value: inputs.email,\n          placeholder: \"email\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          name: \"name\",\n          type: \"text\",\n          value: inputs.name,\n          placeholder: \"name\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBasicPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          name: \"password\",\n          value: inputs.password,\n          placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(SignUp, \"og01Hd4Q3mxdp6A7skwB0Y7KJe4=\", false, function () {\n  return [useForm, useMutation];\n});\n\n_c = SignUp;\nSignUp.propTypes = {\n  history: PropTypes.object.isRequired,\n  refetch: PropTypes.func.isRequired\n};\nexport default _c2 = withRouter(SignUp);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SignUp\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/spav/Documents/Kurs/Assigment-4/client2/src/pages/Auth/SignUp.js"],"names":["React","useState","withRouter","useMutation","Button","Form","Row","PropTypes","GET_ALL_USERS","SIGN_UP","useForm","SignUp","history","refetch","error","setError","inputs","handleChange","email","name","password","signup","loading","handleSubmit","e","preventDefault","response","variables","userInput","refetchQueries","localStorage","setItem","data","token","push","graphQLErrors","message","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { Button,  Form, Row } from 'react-bootstrap'\nimport PropTypes from 'prop-types';\n\nimport { GET_ALL_USERS, SIGN_UP } from '../../utils/graphql';\nimport useForm from '../../hooks/useForm';\n\nconst SignUp = ({ history, refetch }) => {\n    const [error, setError] = useState('');\n    const {inputs, handleChange} = useForm({\n      email: '',\n      name: '',\n      password: ''\n    })\n\n  const [signup, { loading }] = useMutation(SIGN_UP);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const response = await signup({\n        variables:  {\n          userInput: inputs,\n      },    \n      refetchQueries: GET_ALL_USERS\n      });\n      localStorage.setItem('token', response.data.signup.token);\n      await refetch();\n      history.push('/');\n    } catch (error) {\n      setError(error.graphQLErrors[0].message);\n    }\n  };\n\n\n  return (\n    <>\n            <Form onSubmit={handleSubmit}>\n              <Form.Group>\n              <Form.Label>E-Mail</Form.Label>\n                <Form.Control name=\"email\" type=\"text\" value={inputs.email} placeholder=\"email\" onChange={handleChange} />\n              </Form.Group>\n              <Form.Group>\n              <Form.Label>Name</Form.Label>\n                <Form.Control name=\"name\" type=\"text\" value={inputs.name} placeholder=\"name\" onChange={handleChange} />\n              </Form.Group>\n              <Form.Group controlId=\"formBasicPassword\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control type=\"password\" name=\"password\" value={inputs.password} placeholder=\"Пароль\" onChange={handleChange}/>\n              </Form.Group>\n              <Button variant=\"primary\" type=\"submit\">\n                Sign Up\n              </Button>\n            </Form>\n        \n    </>\n  );\n};\n\nSignUp.propTypes = {\n  history: PropTypes.object.isRequired,\n  refetch: PropTypes.func.isRequired,\n};\n\nexport default withRouter(SignUp);"]},"metadata":{},"sourceType":"module"}