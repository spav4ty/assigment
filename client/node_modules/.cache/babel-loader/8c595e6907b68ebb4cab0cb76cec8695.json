{"ast":null,"code":"var _jsxFileName = \"/home/spav/Documents/Kurs/Assigment-4/client2/src/pages/Auth/SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport PropTypes from 'prop-types';\nimport { SIGN_UP } from '../../utils/graphql';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SignUp = ({\n  history,\n  refetch\n}) => {\n  _s();\n\n  const [error, setError] = useState('');\n  const [values, setValues] = useState({\n    name: '',\n    email: '',\n    password: ''\n  });\n  const [signup, {\n    loading\n  }] = useMutation(SIGN_UP);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmitSignUp = async e => {\n    e.preventDefault();\n\n    try {\n      const response = await signup({\n        variables: {\n          input: {\n            name,\n            email,\n            password\n          }\n        }\n      });\n      localStorage.setItem('token', response.data.signup.token);\n      await refetch();\n      history.push('/');\n    } catch (error) {\n      setError(error.graphQLErrors[0].message);\n    }\n  };\n\n  const {\n    name,\n    email,\n    password\n  } = values;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => handleSubmit(e, signup),\n      children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(SignUp, \"HWIervDnv++F+FnvilEXq9kDE+E=\", false, function () {\n  return [useMutation];\n});\n\n_c = SignUp;\nSignUp.propTypes = {\n  history: PropTypes.object.isRequired,\n  refetch: PropTypes.func.isRequired\n};\nexport default _c2 = withRouter(SignUp);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SignUp\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/spav/Documents/Kurs/Assigment-4/client2/src/pages/Auth/SignUp.js"],"names":["React","useState","withRouter","useMutation","PropTypes","SIGN_UP","SignUp","history","refetch","error","setError","values","setValues","name","email","password","signup","loading","handleChange","e","value","target","handleSubmitSignUp","preventDefault","response","variables","input","localStorage","setItem","data","token","push","graphQLErrors","message","handleSubmit","propTypes","object","isRequired","func"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,OAAT,QAAwB,qBAAxB;;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAA0B;AAAA;;AACrC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACF,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC;AACnCY,IAAAA,IAAI,EAAE,EAD6B;AAEnCC,IAAAA,KAAK,EAAE,EAF4B;AAGnCC,IAAAA,QAAQ,EAAE;AAHyB,GAAD,CAApC;AAMA,QAAM,CAACC,MAAD,EAAS;AAAEC,IAAAA;AAAF,GAAT,IAAwBd,WAAW,CAACE,OAAD,CAAzC;;AAEA,QAAMa,YAAY,GAAIC,CAAD,IAAO;AAC1B,UAAM;AAAEN,MAAAA,IAAF;AAAQO,MAAAA;AAAR,QAAkBD,CAAC,CAACE,MAA1B;AACAT,IAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAa,OAACE,IAAD,GAAQO;AAArB,KAAD,CAAT;AACD,GAHD;;AAKA,QAAME,kBAAkB,GAAG,MAAOH,CAAP,IAAa;AACtCA,IAAAA,CAAC,CAACI,cAAF;;AAEA,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMR,MAAM,CAAC;AAC5BS,QAAAA,SAAS,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAEb,YAAAA,IAAF;AAAQC,YAAAA,KAAR;AAAeC,YAAAA;AAAf;AAAT;AADiB,OAAD,CAA7B;AAGAY,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BJ,QAAQ,CAACK,IAAT,CAAcb,MAAd,CAAqBc,KAAnD;AACA,YAAMtB,OAAO,EAAb;AACAD,MAAAA,OAAO,CAACwB,IAAR,CAAa,GAAb;AACD,KAPD,CAOE,OAAOtB,KAAP,EAAc;AACdC,MAAAA,QAAQ,CAACD,KAAK,CAACuB,aAAN,CAAoB,CAApB,EAAuBC,OAAxB,CAAR;AACD;AACF,GAbD;;AAeA,QAAM;AAAEpB,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA4BJ,MAAlC;AAEA,sBACE;AAAA,2BACI;AAAM,MAAA,QAAQ,EAAGQ,CAAD,IAAOe,YAAY,CAACf,CAAD,EAAIH,MAAJ,CAAnC;AAAA,iBACGP,KAAK,iBAAK;AAAA,kBAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,cADb,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADF;AAWD,CA3CD;;GAAMH,M;UAQ0BH,W;;;KAR1BG,M;AA6CNA,MAAM,CAAC6B,SAAP,GAAmB;AACjB5B,EAAAA,OAAO,EAAEH,SAAS,CAACgC,MAAV,CAAiBC,UADT;AAEjB7B,EAAAA,OAAO,EAAEJ,SAAS,CAACkC,IAAV,CAAeD;AAFP,CAAnB;AAKA,qBAAenC,UAAU,CAACI,MAAD,CAAzB","sourcesContent":["import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport PropTypes from 'prop-types';\n\nimport { SIGN_UP } from '../../utils/graphql';\n\nconst SignUp = ({ history, refetch }) => {\n    const [error, setError] = useState('');\n  const [values, setValues] = useState({\n    name: '',\n    email: '',\n    password: '',\n  });\n\n  const [signup, { loading }] = useMutation(SIGN_UP);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setValues({ ...values, [name]: value });\n  };\n\n  const handleSubmitSignUp = async (e) => {\n    e.preventDefault();\n\n    try {\n      const response = await signup({\n        variables: { input: { name, email, password} },\n      });\n      localStorage.setItem('token', response.data.signup.token);\n      await refetch();\n      history.push('/');\n    } catch (error) {\n      setError(error.graphQLErrors[0].message);\n    }\n  };\n\n  const { name, email, password } = values;\n\n  return (\n    <>\n        <form onSubmit={(e) => handleSubmit(e, signup)}>\n          {error && (<div>{error}</div>)}\n          <button>\n            Sign Up\n          </button>\n        </form>\n      \n    </>\n  );\n};\n\nSignUp.propTypes = {\n  history: PropTypes.object.isRequired,\n  refetch: PropTypes.func.isRequired,\n};\n\nexport default withRouter(SignUp);"]},"metadata":{},"sourceType":"module"}